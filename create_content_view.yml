---
- name: "get repo ids"
  ansible.builtin.shell: >
    hammer repository list |
    grep "{{ product }}" | 
    awk '{printf "%s%s",sep,$1; sep=","} END{print ""}'
  register: rep_list
  changed_when: false

- name: "list content views"
  ansible.builtin.command: >
    hammer content-view list
  register: cv_list
  changed_when: false

- name: "create content view"
  ansible.builtin.command: >
    hammer content-view create
    --name "{{ cv_name }}"
    --repository-ids "{{ rep_list.stdout }}"
    --organization "{{ organization }}"
  when: "cv_name not in cv_list.stdout"

- name: "get content view id"
  ansible.builtin.shell: >
    hammer content-view list |
    grep "{{ cv_name }}" |
    awk '{printf "%s%s",sep,$1; sep=","} END{print ""}'
  register: cv_ID
  changed_when: false

- name: "get version list"
  ansible.builtin.shell: >
    hammer content-view version list |
    grep "{{ cv_name }}" |
    awk -F'|' '{gsub(" ",""); print $3}'
  register: cv_ver_list
  changed_when: false

- name: "publish content view"
  ansible.builtin.command: >
    hammer content-view publish
    --id "{{ cv_ID.stdout | int }}"
    --major 1
    --minor 0
    --organization "{{ organization }}"
    --async
  when: (cv_ID.stdout|length > 0) and 
        (cv_ver_list.stdout|length == 0)

- name: "get version lifecycle envs"
  ansible.builtin.shell: >
    hammer content-view version list |
    grep "{{ cv_name }}" |
    awk -F'|' '{print $5}'
  register: cv_ver_envs
  changed_when: false

- name: "promote content view"
  ansible.builtin.command: >
    hammer content-view version promote
    --content-view "{{ cv_name }}"
    --to-lifecycle-environment "{{ item.name }}"
    --organization "{{ organization }}"
    --async
  loop: "{{ lifecycle_envs }}"
  when: "item.name not in cv_ver_envs.stdout"

